Usage: firebase [options] [command]

Options:
  -V, --version                                             output the version number
  -P, --project <alias_or_project_id>                       the Firebase project to use for this command
  -j, --json                                                output JSON instead of text, also triggers non-interactive mode
  --token <token>                                           supply an auth token for this command
  --non-interactive                                         error out of the command instead of waiting for prompts
  -i, --interactive                                         force prompts to be displayed
  --debug                                                   print verbose debug output and keep a debug log file
  -h, --help                                                output usage information

Commands:
  appdistribution:distribute [options] <distribution-file>  upload a distribution
  apps:create [options] [platform] [displayName]            create a new Firebase app. [platform] can be IOS, ANDROID or WEB (case insensitive).
  apps:list [platform]                                      list the registered apps of a Firebase project. Optionally filter apps by [platform]: IOS, ANDROID or WEB
                                                            (case insensitive)
  apps:sdkconfig [options] [platform] [appId]               print the Google Services config of a Firebase app. [platform] can be IOS, ANDROID or WEB (case
                                                            insensitive)
  auth:export [options] [dataFile]                          Export accounts from your Firebase project into a data file
  auth:import [options] [dataFile]                          import users into your Firebase project from a data file(.csv or .json)
  database:get [options] <path>                             fetch and print JSON data at the specified path
  database:instances:create <instanceName>                  create a realtime database instance
  database:instances:list                                   list realtime database instances
  database:profile [options]                                profile the Realtime Database and generate a usage report
  database:push [options] <path> [infile]                   add a new JSON object to a list of data in your Firebase
  database:remove [options] <path>                          remove data from your Firebase at the specified path
  database:set [options] <path> [infile]                    store JSON data at the specified path via STDIN, arg, or file
  database:settings:get [options] <path>                    read the realtime database setting at path
  database:settings:set [options] <path> <value>            set the realtime database setting at path.
  database:update [options] <path> [infile]                 update some of the keys for the defined path in your Firebase
  deploy [options]                                          deploy code and assets to your Firebase project
  emulators:exec [options] <script>                         start the local Firebase emulators, run a test script, then shut down the emulators
  emulators:export [options] <path>                         export data from running emulators
  emulators:start [options]                                 start the local Firebase emulators
  experimental:functions:shell [options]                    launch full Node shell with emulated functions. (Alias for `firebase functions:shell.)
  ext                                                       display information on how to use ext commands and extensions installed to your project
  ext:configure [options] <extensionInstanceId>             configure an existing extension instance
  ext:info [options] <extensionName>                        display information about an extension by name (extensionName@x.y.z for a specific version)
  ext:install [options] [extensionName]                     install a local extension if [localPathOrUrl] or [url#root] is provided;
  ext:list                                                  list all the extensions that are installed in your Firebase project
  ext:uninstall [options] <extensionInstanceId>             uninstall an extension that is installed in your Firebase project by instance ID
  ext:update <extensionInstanceId>                          update an existing extension instance to the latest version
  firestore:delete [options] [path]                         Delete data from Cloud Firestore.
  firestore:indexes [options]                               List indexes in your project's Cloud Firestore database.
  functions:config:clone [options]                          clone environment config from another project
  functions:config:get [path]                               fetch environment config stored at the given path
  functions:config:set [values...]                          set environment config with key=value syntax
  functions:config:unset [keys...]                          unset environment config at the specified path(s)
  functions:delete [options] [filters...]                   delete one or more Cloud Functions by name or group name.
  functions:log [options]                                   read logs from deployed functions
  functions:shell [options]                                 launch full Node shell with emulated functions
  help [command]                                            display help information
  hosting:disable [options]                                 stop serving web traffic to your Firebase Hosting site
  init [feature]                                            setup a Firebase project in the current directory
  login [options]                                           log the CLI into Firebase
  login:ci [options]                                        generate an access token for use in non-interactive environments
  logout                                                    log the CLI out of Firebase
  open [link]                                               quickly open a browser to relevant project resources
  projects:addfirebase [projectId]                          add Firebase resources to a Google Cloud Platform project
  projects:create [options] [projectId]                     creates a new Google Cloud Platform project, then adds Firebase resources to the project
  projects:list                                             list all Firebase projects you have access to
  serve [options]                                           start a local server for your static assets
  setup:emulators:database                                  downloads the database emulator
  setup:emulators:firestore                                 downloads the firestore emulator
  setup:emulators:pubsub                                    downloads the pubsub emulator
  target [type]                                             display configured deploy targets for the current project
  target:apply <type> <name> <resources...>                 apply a deploy target to a resource
  target:clear <type> <target>                              clear all resources from a named resource target
  target:remove <type> <resource>                           remove a resource target
  use [options] [alias_or_project_id]                       set an active Firebase project for your working directory

serve additional commands
--only hosting	Firebase Hosting content
--only database	Firebase Realtime Database rules
--only storage	Cloud Storage for Firebase rules
--only firestore	Cloud Firestore rules and indexes
--only firestore:rules	Cloud Firestore rules
--only firestore:indexes	Cloud Firestore indexes
--only functions	Cloud Functions for Firebase